name: se347-project
x-minio-credential: &minio-credential
  MINIO_API_SERVER: ${MINIO_API_SERVER:-http://minio-svc:9000}
  MINIO_SERVER_ACCESS_KEY: ${MINIO_SERVER_ACCESS_KEY:-minio-demo}
  MINIO_SERVER_SECRET_KEY: ${MINIO_SERVER_SECRET_KEY:-minio-demo}
  MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio-demo}
  MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio-demo}
services:
  se347-frontend:
    ports:
    - "4200:4200"
    build:
      context: ./se347-frontend
      dockerfile: Dockerfile
  minio:
    image: bitnami/minio:2024.10.13-debian-12-r0
    restart: always
    hostname: minio-svc
    healthcheck:
      test: [ "CMD","curl","-f","http://127.0.0.1:9000/minio/health/live" ]
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      <<: *minio-credential
    volumes:
      - minio-data:/bitnami/minio/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
  redis:
    image: redis:alpine3.21
    ports:
      - "6379:6379"
  mongo-primary:
    image: bitnami/mongodb:8.0.3-debian-12-r1
    volumes:
      - bitnami-mongodb:/bitnami/mongodb
    environment:
      - MONGODB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD:-root}
      - MONGODB_ROOT_USER=${MONGODB_ROOT_USER:-root}
      - MONGODB_USERNAME=${MONGODB_USERNAME:-dev}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD:-dev}
      - MONGODB_DATABASE=${MONGODB_DATABASE:-se347-backend}
      - MONGODB_PORT_NUMBER=27017
    ports:
      - "27017:27017"
  se347-backend:
    mem_limit: 512m
    restart: unless-stopped
    build:
      args:
        VERSION: ${IMAGE_VERSION:-dev-latest}
        SERVICE_NAME: se347-backend
        SERVICE_PORT: 5000
      context: ./se347-backend/se347-backend
      dockerfile: Dockerfile
    #cpus: 1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      SPRING_DATA_MONGODB_HOST: mongo-primary
      SPRING_DATA_MONGODB_USERNAME: ${MONGODB_USERNAME:-dev}
      SPRING_DATA_MONGODB_PASSWORD: ${MONGODB_PASSWORD:-dev}
      SPRING_DATA_MONGODB_DATABASE: ${MONGODB_DATABASE:-se347-backend}
      APP_VERSION: ${IMAGE_VERSION:-dev-latest}
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATA_REDIS_HOST: redis
      <<: *minio-credential
    healthcheck:
      test: [ "CMD","curl","http://localhost:5000/actuator/health/liveness" ]
      interval: 3s
      timeout: 3s
      retries: 3
    depends_on:
      minio:
        condition: service_healthy
      mongo-primary:
        condition: service_started
      redis:
        condition: service_started
    ports:
      - "5000:5000"
volumes:
  minio-data:
  bitnami-mongodb: